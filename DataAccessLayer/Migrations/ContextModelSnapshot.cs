// <auto-generated />
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.ColdDrink", b =>
                {
                    b.Property<int>("ColdDrinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColdDrinkID"), 1L, 1);

                    b.Property<string>("ColdDrinkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColdDrinkPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColdDrinkID");

                    b.ToTable("ColdDrinks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Dessert", b =>
                {
                    b.Property<int>("DessertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DessertID"), 1L, 1);

                    b.Property<string>("DessertImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DessertPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DessertID");

                    b.ToTable("Desserts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HotDrink", b =>
                {
                    b.Property<int>("HotDrinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotDrinkID"), 1L, 1);

                    b.Property<string>("HotDrinkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotDrinkPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotDrinkID");

                    b.ToTable("HotDrinks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MainCourse", b =>
                {
                    b.Property<int>("MainCourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainCourseID"), 1L, 1);

                    b.Property<string>("MainCourseImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCoursePrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainCourseID");

                    b.ToTable("MainCourses");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Salad", b =>
                {
                    b.Property<int>("SaladID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaladID"), 1L, 1);

                    b.Property<string>("SaladImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaladPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SaladID");

                    b.ToTable("Salads");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Soup", b =>
                {
                    b.Property<int>("SoupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoupID"), 1L, 1);

                    b.Property<string>("SoupImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoupPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoupID");

                    b.ToTable("soups");
                });
#pragma warning restore 612, 618
        }
    }
}
